{"version":3,"sources":["assets/first.jpg","assets/second.jpg","assets/third.jpg","utils/getData.js","App.js","reportWebVitals.js","index.js"],"names":["getData","fetch","then","response","json","canIShowImages","a","Promise","all","res","console","log","App","useState","isLoad","setLoaded","useEffect","fetchData","images","first","second","third","className","map","el","i","src","alt","_","width","height","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAAe,MAA0B,kCCA1B,MAA0B,mCCA1B,MAA0B,kCCGnCA,EAAU,WACd,OAAOC,MAHP,0FAIGC,MAAK,SAACC,GAAD,OAAcA,EAASC,WAGpBC,EAAc,uCAAG,4BAAAC,EAAA,sEACVC,QAAQC,IAAI,CAACR,IAAWA,MADd,UACtBS,EADsB,OAE5BC,QAAQC,IAAIF,GACRA,EAAI,GAAK,IAAM,GAAKA,EAAI,GAAK,IAAM,EAHX,0CAGqB,GAHrB,gCAIrBJ,KAJqB,2CAAH,qD,+BCqBZO,MArBf,WAAgB,IAAD,EACeC,oBAAS,GADxB,mBACNC,EADM,KACEC,EADF,iDAKb,4BAAAT,EAAA,sEACoBD,IADpB,OACQI,EADR,OAEEM,EAAUN,GAFZ,4CALa,sBAEbO,qBAAU,YAFG,mCAGXC,KACC,IAKH,IAAMC,EAAS,CAACC,EAAOC,EAAQC,GAC/B,OACE,qBAAKC,UAAU,MAAf,SACE,qBAAKA,UAAU,UAAf,SAEIR,EAASI,EAAOK,KAAI,SAACC,EAAIC,GAAL,OAAW,qBAAaC,IAAKF,EAAIG,IAAI,aAAhBF,MACrCP,EAAOK,KAAI,SAACK,EAAGH,GAAJ,OAAU,cAAC,IAAD,CAAkBI,MAAO,IAAKC,OAAQ,KAAvBL,WCXnCM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.756377bd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/first.820da9a7.jpg\";","export default __webpack_public_path__ + \"static/media/second.35d80ab6.jpg\";","export default __webpack_public_path__ + \"static/media/third.ce31ccf2.jpg\";","const url =\r\n  'https://www.random.org/integers/?num=1&min=1&max=10&col=1&base=10&format=plain&rnd=new';\r\n\r\nconst getData = () => {\r\n  return fetch(url)\r\n    .then((response) => response.json())\r\n};\r\n\r\nexport const canIShowImages = async () => {\r\n  const res = await Promise.all([getData(), getData()]);\r\n  console.log(res);\r\n  if (res[0] % 2 === 0 && res[1] % 2 === 0) return true;\r\n  return canIShowImages();\r\n};\r\n","import first from './assets/first.jpg';\r\nimport second from './assets/second.jpg';\r\nimport third from './assets/third.jpg';\r\nimport { canIShowImages } from './utils/getData'\r\nimport './App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Skeleton from 'react-loading-skeleton';\r\n\r\nfunction App() {\r\n  const [isLoad, setLoaded] = useState(false)\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [])\r\n  async function fetchData() {\r\n    const res = await canIShowImages();\r\n    setLoaded(res);\r\n  }\r\n  const images = [first, second, third];\r\n  return (\r\n    <div className='App'>\r\n      <div className='wrapper'>\r\n        {\r\n          isLoad ? images.map((el, i) => <img key={i} src={el} alt=\"mountains\" />)\r\n            : images.map((_, i) => <Skeleton key={i} width={350} height={200} />)\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}